name: On Push Main

on:
  push:
    branches:
      - main

jobs:
#  Tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2
#
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '16'
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: Unit Test
#        run: npm run ci:test

#  SonarCloud:
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  BuildAndPushImage:
#    needs: [ Tests, SonarCloud ]
    name: BuildAndPushImage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

#      - name: New Relic License
#        run: |
#          sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile

      - name: Build Image
        env:
          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/frontend:latest .

      - name: Docker Login
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

      - name: Push Image
        env:
          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/frontend:latest .
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/frontend:latest

  Deploy:
    needs: BuildAndPushImage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Auth GCP
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

#      - name: Deploy to App Engine
#        id: appengine
#        env:
#          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
#        uses: 'google-github-actions/deploy-appengine@v0'
#        with:
#          image_url: ${{ secrets.ARTIFACT_REGISTRY }}/frontend:latest

      - name: Set up GCloud
        uses: 'google-github-actions/deploy-cloudrun@v0'

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy frontend --quiet --image ${{ secrets.ARTIFACT_REGISTRY }}/frontend:latest --project hackathon-6aso-grupo-08 --region us-central1 --platform managed

      - name: Prod Check
        run: 'curl "${{ steps.appengine.outputs.url }}"'