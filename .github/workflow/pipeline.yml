name: Deploy

on:
  push:
    branches:
      - main

jobs:
  InstallDeps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache project deps
        uses: martijnhols/cache@read-only  # See https://github.com/actions/cache/pull/474
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            node-modules-
          read-only: false

      - name: Install dependencies
        run: npm install

#  Tests:
#    needs: [ InstallDeps ]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Unit Test
#        run: npm test

#  SonarCloud:
#    needs: [ InstallDeps ]
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  BuildAndPushImage:
#    needs: [ InstallDeps ] # todo: add Tests and SonarCloud
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout Repo
#        uses: actions/checkout@v2

#      - name: New Relic License
#        run: |
#          sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile
#
#      - name: Docker Login
#        env:
#          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
#        run: |
#          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
#          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/
#
#      - name: Build Image & Push
#        env:
#          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
#        run: |
#          docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/myapp:latest .
#          docker push ${{ secrets.ARTIFACT_REGISTRY }}/myapp:latest

#  Deploy:
#    needs: BuildAndPushImage
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2
#
#      - name: Deploy Heroku
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
#
#      - name: Auth GCP AppEngine
#        env:
#          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
#
#      - name: Deploy to App Engine
#        id: appengine
#        env:
#          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
#        uses: 'google-github-actions/deploy-appengine@v0'
#        with:
#          image_url: ${{ secrets.ARTIFACT_REGISTRY }}/myapp:latest
#
#      - name: Prod Check
#        run: 'curl "${{ steps.appengine.outputs.url }}"'